{
  "$schema": "https://vega.github.io/schema/vega/v3.0.json",
  "description": "Hsd Vega Specification",
  "width": 800,
  "height": 2400,
  "padding": 5,
  "autosize": "pad",
  "data": [
    {
      "name": "subtreeBreakdown",
      "transform": [
        {
          "type": "project",
          "fields": [
            "NodeLevel",
            "NodePath",
            "SubtreeLevel",
            "ConceptType",
            "Visibility",
            "IsSynonym",
            "NumberOfPaths"
          ],
          "as": [
            "level",
            "path",
            "subtreeLevel",
            "type",
            "visibility",
            "isSynonym",
            "numPaths"
          ]
        },
        {
          "type": "formula",
          "expr": "[slice(datum.path, 0, -1), datum.level, datum.subtreeLevel]",
          "as": "summaryNodeId"
        },
        {
          "type": "formula",
          "expr": "slice(datum.summaryNodeId, 0, -1)",
          "as": "internalNodeId"
        }
      ]
    },
    {
      "name": "rawNodes",
      "format": {
        "type": "csv",
        "parse": {
          "NodeName": "string",
          "NodeType": "string"
        }
      },
      "transform": [
        {
          "type": "project",
          "fields": [
            "NodeLevel",
            "NodePath",
            "NodeName",
            "NodeType",
            "NodeVisibility",
            "NodeIsSynonym",
            "NumberOfPaths"
          ],
          "as": [
            "level",
            "path",
            "name",
            "type",
            "visibility",
            "isSynonym",
            "numPaths"
          ]
        },
        {
          "type": "formula",
          "expr": "[slice(datum.path, 0, -1), datum.level]",
          "as": "internalNodeId"
        }
      ]
    },
    {
      "name": "levelSequence",
      "source": "subtreeBreakdown",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.subtreeLevel != null"
        },
        {
          "type": "extent",
          "field": "subtreeLevel",
          "signal": "treeLevelExtent"
        },
        {
          "type": "sequence",
          "start": 0,
          "stop": {
            "signal": "peek(treeLevelExtent) + 1"
          }
        },
        {
          "type": "filter",
          "expr": "datum.data != null"
        }
      ]
    },
    {
      "name": "subtreeNodeCounts",
      "source": "subtreeBreakdown",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.isSynonym == 'N'"
        },
        {
          "type": "aggregate",
          "groupby": [
            "summaryNodeId"
          ],
          "fields": [
            "numPaths"
          ],
          "ops": [
            "sum"
          ],
          "as": [
            "count"
          ]
        },
        {
          "type": "extent",
          "field": "count",
          "signal": "countExtent"
        },
        {
          "type": "formula",
          "expr": "log(max(1, 100 * datum.count / peek(countExtent))) / log(100) * .75 + .25",
          "as": "multiplier"
        }
      ]
    },
    {
      "name": "internalNodes",
      "source": "subtreeBreakdown",
      "transform": [
        {
          "type": "aggregate",
          "groupby": [
            "internalNodeId"
          ]
        },
        {
          "type": "formula",
          "expr": "lastindexof(datum.internalNodeId[0], '\\\\')",
          "as": "splitIndex"
        },
        {
          "type": "formula",
          "expr": "slice(datum.internalNodeId[0], 0, datum.splitIndex)",
          "as": "parentPath"
        },
        {
          "type": "formula",
          "expr": "[datum.parentPath, datum.internalNodeId[1] - 1]",
          "as": "parentInternalNodeId"
        },
        {
          "type": "formula",
          "expr": "if(datum.parentPath == '', null, datum.parentInternalNodeId)",
          "as": "parentInternalNodeId"
        },
        {
          "type": "lookup",
          "from": "rawNodes",
          "key": "internalNodeId",
          "values": [
            "type",
            "name",
            "visibility"
          ],
          "fields": [
            "internalNodeId"
          ],
          "default": "Leaf"
        }
      ]
    },
    {
      "name": "internalLeafs",
      "source": "internalNodes",
      "transform": [
        {
          "type": "filter",
          "expr": "!indata('internalNodes', 'parentInternalNodeId', datum.internalNodeId)"
        }
      ]
    },
    {
      "name": "summaryNodes",
      "source": "subtreeNodeCounts",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.summaryNodeId[2] != null"
        },
        {
          "type": "formula",
          "expr": "slice(datum.summaryNodeId, 0, -1)",
          "as": "internalNodeId"
        },
        {
          "type": "lookup",
          "from": "internalLeafs",
          "key": "internalNodeId",
          "fields": [
            "internalNodeId"
          ],
          "as": [
            "superNode"
          ]
        },
        {
          "type": "filter",
          "expr": "datum.superNode != null"
        }
      ]
    },
    {
      "name": "internalTree",
      "source": "internalNodes",
      "transform": [
        {
          "type": "stratify",
          "key": "internalNodeId",
          "parentKey": "parentInternalNodeId"
        },
        {
          "type": "tree",
          "size": [
            {
              "signal": "height"
            },
            {
              "signal": "width"
            }
          ]
        },
        {
          "type": "formula",
          "expr": "datum.x",
          "as": "y"
        },
        {
          "type": "formula",
          "expr": "datum.internalNodeId[1] * width / peek(treeLevelExtent)",
          "as": "x"
        },
        {
          "type": "lookup",
          "from": "rawNodes",
          "key": "internalNodeId",
          "values": [
            "type",
            "name",
            "visibility"
          ],
          "fields": [
            "internalNodeId"
          ],
          "default": "Leaf"
        }
      ]
    },
    {
      "name": "internalLinks",
      "source": "internalTree",
      "transform": [
        {
          "type": "treelinks",
          "key": "internalNodeId"
        },
        {
          "type": "linkpath",
          "orient": "horizontal"
        }
      ]
    },
    {
      "name": "summaryTree",
      "source": "summaryNodes",
      "transform": [
        {
          "type": "lookup",
          "from": "internalTree",
          "key": "internalNodeId",
          "fields": [
            "internalNodeId"
          ],
          "values": [
            "y",
            "visibility"
          ]
        },
        {
          "type": "formula",
          "expr": "datum.summaryNodeId[2] * width / peek(treeLevelExtent)",
          "as": "x"
        }
      ]
    },
    {
      "name": "summaryLinks",
      "source": "summaryTree",
      "transform": [
        {
          "type": "formula",
          "expr": "'M' + (datum.x - width / peek(treeLevelExtent)) + ',' + datum.y + 'L' + datum.x + ',' + datum.y",
          "as": "path"
        }
      ]
    }
  ],
  "signals": [],
  "scales": [
    {
      "name": "levels",
      "type": "point",
      "domain": {
        "data": "levelSequence",
        "field": "data"
      },
      "range": "width"
    },
    {
      "name": "color",
      "type": "ordinal",
      "range": [
        "#5B9BD5",
        "#70AD47",
        "#FFC000"
      ],
      "domain": {
        "data": "rawNodes",
        "field": "type"
      }
    }
  ],
  "projections": [],
  "axes": [
    {
      "scale": "levels",
      "orient": "top"
    }
  ],
  "legends": [
    {
      "fill": "color",
      "title": "Single Concept   ",
      "padding": 10,
      "offset": 10,
      "zindex": 10,
      "encode": {
        "title": {
          "update": {
            "fontSize": {
              "value": 12
            },
            "dx": {
              "value": 0
            }
          }
        },
        "labels": {
          "interactive": true,
          "update": {
            "align": {
              "value": "left"
            },
            "fontSize": {
              "value": 12
            },
            "fill": {
              "value": "#000000"
            },
            "dx": {
              "value": 0
            }
          }
        },
        "symbols": {
          "interactive": true,
          "update": {
            "stroke": {
              "value": "#4374A0"
            },
            "size": {
              "value": 300
            },
            "dx": {
              "value": 0
            }
          },
          "hover": {
            "stroke": {
              "value": "#000000"
            }
          }
        },
        "legend": {
          "update": {
            "stroke": {
              "value": "#4374A0"
            },
            "strokeWidth": {
              "value": 1.5
            }
          }
        }
      }
    },
    {
      "fill": "color",
      "title": "Multiple Concept",
      "padding": 10,
      "offset": 10,
      "zindex": 10,
      "encode": {
        "title": {
          "update": {
            "fontSize": {
              "value": 12
            },
            "dx": {
              "value": 0
            }
          }
        },
        "labels": {
          "interactive": true,
          "update": {
            "align": {
              "value": "left"
            },
            "fontSize": {
              "value": 12
            },
            "fill": {
              "value": "#000000"
            },
            "dx": {
              "value": 0
            }
          }
        },
        "symbols": {
          "interactive": true,
          "update": {
            "shape": {
              "value": "square"
            },
            "stroke": {
              "value": "#4374A0"
            },
            "size": {
              "value": 300
            },
            "dx": {
              "value": 0
            }
          },
          "hover": {
            "stroke": {
              "value": "#000000"
            }
          }
        },
        "legend": {
          "update": {
            "stroke": {
              "value": "#4374A0"
            },
            "strokeWidth": {
              "value": 1.5
            }
          }
        }
      }
    },
    {
      "fill": "color",
      "title": "Inactive                ",
      "padding": 9.5,
      "offset": 10,
      "zindex": 10,
      "encode": {
        "title": {
          "update": {
            "fontSize": {
              "value": 12
            },
            "dx": {
              "value": 0
            }
          }
        },
        "labels": {
          "interactive": true,
          "update": {
            "align": {
              "value": "left"
            },
            "fontSize": {
              "value": 12
            },
            "fill": {
              "value": "#000000"
            },
            "dx": {
              "value": 0
            }
          }
        },
        "symbols": {
          "interactive": true,
          "update": {
            "shape": {
              "value": "square"
            },
            "stroke": {
              "value": "#4374A0"
            },
            "fillOpacity": {
              "value": 0.3
            },
            "size": {
              "value": 300
            },
            "dx": {
              "value": 0
            }
          },
          "hover": {
            "stroke": {
              "value": "#000000"
            }
          }
        },
        "legend": {
          "update": {
            "stroke": {
              "value": "#4374A0"
            },
            "strokeWidth": {
              "value": 1.5
            }
          }
        }
      }
    }
  ],
  "marks": [
    {
      "type": "path",
      "from": {
        "data": "internalLinks"
      },
      "encode": {
        "update": {
          "path": {
            "field": "path"
          },
          "stroke": {
            "value": "#ccc"
          }
        }
      }
    },
    {
      "type": "path",
      "from": {
        "data": "summaryLinks"
      },
      "encode": {
        "update": {
          "path": {
            "field": "path"
          },
          "stroke": {
            "value": "#ccc"
          }
        }
      }
    },
    {
      "type": "symbol",
      "from": {
        "data": "internalTree"
      },
      "encode": {
        "enter": {
          "x": {
            "field": "x"
          },
          "y": {
            "field": "y"
          },
          "size": {
            "value": 300
          },
          "fill": {
            "scale": "color",
            "field": "type"
          },
          "fillOpacity": [
            {
              "test": "datum.visibility == 'Inactive'",
              "value": 0.3
            },
            {
              "value": 1
            }
          ],
          "stroke": {
            "value": "#4374A0"
          },
          "strokeWidth": {
            "value": 0.7
          },
          "tooltip": {
            "signal": "datum.internalNodeId[0] + datum.type"
          }
        }
      }
    },
    {
      "type": "text",
      "from": {
        "data": "internalTree"
      },
      "encode": {
        "enter": {
          "text": {
            "field": "name"
          },
          "align": {
            "value": "center"
          },
          "dy": {
            "value": -9.6
          },
          "x": {
            "field": "x"
          },
          "y": {
            "field": "y"
          },
          "fill": {
            "value": "black"
          },
          "fontSize": {
            "value": 10
          },
          "baseline": {
            "value": "bottom"
          }
        }
      }
    },
    {
      "type": "text",
      "from": {
        "data": "internalTree"
      },
      "encode": {
        "enter": {
          "fill": [
            {
              "test": "datum.type == 'Leaf' || datum.visibility == 'Inactive'",
              "value": "black"
            },
            {
              "value": "#F2F7FC"
            }
          ],
          "text": {
            "value": "1"
          },
          "opacity": {
            "value": 1
          },
          "x": {
            "field": "x"
          },
          "y": {
            "field": "y"
          },
          "dy": {
            "value": 1.6
          },
          "dx": {
            "value": -2
          },
          "fontSize": {
            "value": 6
          }
        }
      }
    },
    {
      "type": "group",
      "from": {
        "data": "summaryTree"
      },
      "encode": {
        "update": {
          "x": {
            "field": "x"
          },
          "y": {
            "signal": "datum.y - 20 * datum.multiplier / 2"
          }
        }
      },
      "data": [
        {
          "name": "counts",
          "source": "subtreeBreakdown",
          "transform": [
            {
              "type": "filter",
              "expr": "toString(datum.summaryNodeId) == toString(parent.summaryNodeId) && datum.isSynonym == 'N'"
            },
            {
              "type": "joinaggregate",
              "fields": [
                "numPaths"
              ],
              "ops": [
                "sum"
              ],
              "as": [
                "totalNumPaths"
              ]
            },
            {
              "type": "formula",
              "expr": "datum.numPaths / datum.totalNumPaths",
              "as": "percentage"
            },
            {
              "type": "window",
              "sort": {
                "field": [
                  "type",
                  "visibility"
                ]
              },
              "fields": [
                "percentage"
              ],
              "ops": [
                "sum"
              ],
              "as": [
                "cumPercentage"
              ]
            },
            {
              "type": "formula",
              "expr": "datum.cumPercentage - datum.percentage",
              "as": "cumPercentage"
            }
          ]
        }
      ],
      "marks": [
        {
          "type": "rect",
          "from": {
            "data": "counts"
          },
          "encode": {
            "enter": {
              "fill": {
                "scale": "color",
                "field": "type"
              },
              "stroke": {
                "value": "#4374A0"
              },
              "strokeWidth": {
                "value": 0.7
              },
              "fillOpacity": [
                {
                  "test": "datum.visibility == 'Inactive'",
                  "value": 0.3
                },
                {
                  "value": 1
                }
              ],
              "tooltip": {
                "signal": "'# Concepts: ' + datum.numPaths + ' / ' + datum.totalNumPaths"
              },
              "x": {
                "value": -7.5
              },
              "y": {
                "signal": "20 * parent.multiplier * datum.cumPercentage"
              },
              "width": {
                "value": 15
              },
              "height": {
                "signal": "20 * parent.multiplier * datum.percentage"
              }
            }
          }
        }
      ]
    },
    {
      "type": "text",
      "from": {
        "data": "summaryTree"
      },
      "encode": {
        "enter": {
          "text": {
            "field": "count"
          },
          "dx": {
            "value": 0
          },
          "dy": {
            "value": -9.6
          },
          "align": {
            "value": "center"
          },
          "baseline": {
            "value": "bottom"
          },
          "fontSize": {
            "value": 10
          }
        },
        "update": {
          "x": {
            "field": "x"
          },
          "y": {
            "field": "y"
          }
        }
      }
    }
  ]
}

{
  "$schema": "https://vega.github.io/schema/vega/v3.0.json",
  "description": "Hsd Vega Specification",
  "width": 800,
  "height": 800,
  "padding": 5,
  "autosize": "pad",
  "data": [
    {
      "name": "subtreeBreakdown",
      "transform": [
        {
          "type": "project",
          "fields": [
            "NodeLevel",
            "NodePath",
            "SubtreeLevel",
            "ConceptType",
            "Visibility",
            "NumberOfPaths"
          ],
          "as": [
            "level",
            "path",
            "subtreeLevel",
            "type",
            "visibility",
            "numPaths"
          ]
        },
        {
          "type": "formula",
          "expr": "[slice(datum.path, 0, -1), datum.level, datum.subtreeLevel]",
          "as": "summaryNodeId"
        },
        {
          "type": "formula",
          "expr": "slice(datum.summaryNodeId, 0, -1)",
          "as": "internalNodeId"
        }
      ]
    },

    {
      "name": "levelSequence",
      "source": "subtreeBreakdown",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.subtreeLevel != null"
        },
        {
          "type": "extent",
          "field": "subtreeLevel",
          "signal": "treeLevelExtent"
        },
        {
          "type": "sequence",
          "start": 0,
          "stop": {
            "signal": "peek(treeLevelExtent) + 1"
          }
        },
        {
          "type": "filter",
          "expr": "datum.data != null"
        }
      ]
    },

    {
      "name": "subtreeNodeCounts",
      "source": "subtreeBreakdown",
      "transform": [
        {
          "type": "aggregate",
          "groupby": [
            "summaryNodeId"
          ],
          "fields": [
            "numPaths"
          ],
          "ops": [
            "sum"
          ],
          "as": [
            "count"
          ]
        }
      ]
    },

    {
      "name": "internalNodes",
      "source": "subtreeBreakdown",
      "transform": [
        {
          "type": "aggregate",
          "groupby": [
            "internalNodeId"
          ]
        },
        {
          "type": "formula",
          "expr": "lastindexof(datum.internalNodeId[0], '\\\\')",
          "as": "splitIndex"
        },
        {
          "type": "formula",
          "expr": "slice(datum.internalNodeId[0], 0, datum.splitIndex)",
          "as": "parentPath"
        },
        {
          "type": "formula",
          "expr": "[datum.parentPath, datum.internalNodeId[1] - 1]",
          "as": "parentInternalNodeId"
        },
        {
          "type": "formula",
          "expr": "if(datum.parentPath == '', null, datum.parentInternalNodeId)",
          "as": "parentInternalNodeId"
        }
      ]
    },

    {
      "name": "internalLeafs",
      "source": "internalNodes",
      "transform": [
        {
          "type": "filter",
          "expr": "!indata('internalNodes', 'parentInternalNodeId', datum.internalNodeId)"
        }
      ]
    },

    {
      "name": "summaryNodes",
      "source": "subtreeNodeCounts",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.summaryNodeId[2] != null"
        },
        {
          "type": "formula",
          "expr": "slice(datum.summaryNodeId, 0, -1)",
          "as": "internalNodeId"
        },
        {
          "type": "lookup",
          "from": "internalLeafs",
          "key": "internalNodeId",
          "fields": [
            "internalNodeId"
          ],
          "as": [
            "superNode"
          ]
        },
        {
          "type": "filter",
          "expr": "datum.superNode != null"
        }
      ]
    },

    {
      "name": "internalTree",
      "source": "internalNodes",
      "transform": [
        {
          "type": "stratify",
          "key": "internalNodeId",
          "parentKey": "parentInternalNodeId"
        },
        {
          "type": "tree",
          "size": [
            {
              "signal": "height"
            },
            {
              "signal": "width"
            }
          ]
        },
        {
          "type": "formula",
          "expr": "datum.x",
          "as": "y"
        },
        {
          "type": "formula",
          "expr": "datum.internalNodeId[1] * height / peek(treeLevelExtent)",
          "as": "x"
        }
      ]
    },

    {
      "name": "internalLinks",
      "source": "internalTree",
      "transform": [
        {
          "type": "treelinks",
          "key": "internalNodeId"
        },
        {
          "type": "linkpath",
          "orient": "horizontal"
        }
      ]
    },

    {
      "name": "summaryTree",
      "source": "summaryNodes",
      "transform": [
        {
          "type": "lookup",
          "from": "internalTree",
          "key": "internalNodeId",
          "fields": [
            "internalNodeId"
          ],
          "values": [
            "y"
          ]
        },
        {
          "type": "formula",
          "expr": "datum.summaryNodeId[2] * height / peek(treeLevelExtent)",
          "as": "x"
        }
      ]
    },

    {
      "name": "summaryLinks",
      "source": "summaryTree",
      "transform": [
        {
          "type": "formula",
          "expr": "'M' + (datum.x - height / peek(treeLevelExtent)) + ',' + datum.y + 'L' + datum.x + ',' + datum.y",
          "as": "path"
        }
      ]
    }
  ],
  "signals": [],
  "scales": [
    {
      "name": "levels",
      "type": "point",
      "domain": {
        "data": "levelSequence",
        "field": "data"
      },
      "range": "width"
    }
  ],
  "projections": [],
  "axes": [
    {
      "scale": "levels",
      "orient": "top"
    }
  ],
  "legends": [],
  "marks": [
    {
      "type": "path",
      "from": {
        "data": "internalLinks"
      },
      "encode": {
        "update": {
          "path": {
            "field": "path"
          },
          "stroke": {
            "value": "#ccc"
          }
        }
      }
    },
    {
      "type": "path",
      "from": {
        "data": "summaryLinks"
      },
      "encode": {
        "update": {
          "path": {
            "field": "path"
          },
          "stroke": {
            "value": "#ccc"
          }
        }
      }
    },
    {
      "type": "symbol",
      "from": {
        "data": "internalTree"
      },
      "encode": {
        "enter": {
          "x": {
            "field": "x"
          },
          "y": {
            "field": "y"
          }
        }
      }
    },
    {
      "type": "group",
      "from": {"data": "summaryTree"},
      "encode": {
        "enter": {
          "x": {"field": "x"},
          "y": {"field": "y"}
        }
      },
      "data": [
        {
          "name": "counts",
          "source": "subtreeBreakdown",
          "transform": [
            {
              "type": "filter",
              "expr": "datum.summaryNodeId == parent.summaryNodeId"
            }
          ]
        }
      ],
      "marks": [
        {
          "type": "symbol",
          "encode": {
            "enter": {
            }
          }
        }
      ]
    }
  ]
}
